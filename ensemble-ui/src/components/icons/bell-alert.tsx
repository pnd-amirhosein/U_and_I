import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-bell-alert',
  shadow: false,
})
export class EUIIconBellAlert {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5.85024 3.50019C6.12648 3.19155 6.10021 2.7174 5.79157 2.44116C5.48292 2.16491 5.00878 2.19118 4.73253 2.49982C3.53158 3.84163 2.69593 5.51948 2.38448 7.37592C2.31594 7.78442 2.59155 8.17114 3.00005 8.23967C3.40855 8.3082 3.79527 8.0326 3.8638 7.6241C4.12691 6.05581 4.83289 4.63686 5.85024 3.50019Z" fill="#0F172A"/>
<path d="M19.2669 2.49982C18.9906 2.19118 18.5165 2.16491 18.2078 2.44116C17.8992 2.7174 17.8729 3.19155 18.1492 3.50019C19.1665 4.63686 19.8725 6.05581 20.1356 7.6241C20.2041 8.0326 20.5909 8.3082 20.9994 8.23967C21.4079 8.17114 21.6835 7.78442 21.6149 7.37592C21.3035 5.51948 20.4678 3.84163 19.2669 2.49982Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M11.9999 2.25C8.27203 2.25 5.25 5.27197 5.24989 8.9998L5.24969 9.75C5.24969 11.8731 4.44867 13.8074 3.13114 15.2699C2.96464 15.4547 2.90061 15.71 2.96021 15.9516C3.0198 16.1931 3.19527 16.3893 3.42863 16.4755C4.97275 17.0455 6.58921 17.4659 8.26028 17.7192C8.25339 17.812 8.24989 17.9056 8.24989 18C8.24989 20.0711 9.92882 21.75 11.9999 21.75C14.071 21.75 15.7499 20.0711 15.7499 18C15.7499 17.9056 15.7464 17.812 15.7395 17.7192C17.4104 17.4659 19.0268 17.0455 20.5708 16.4755C20.8041 16.3893 20.9796 16.1931 21.0392 15.9516C21.0988 15.71 21.0347 15.4547 20.8682 15.2699C19.5507 13.8074 18.7497 11.8731 18.7497 9.75V9.04919L18.7499 9C18.7499 5.27208 15.7278 2.25 11.9999 2.25ZM9.74989 18C9.74989 17.9662 9.75063 17.9326 9.75209 17.8993C10.4925 17.966 11.2422 18 11.9997 18C12.7573 18 13.5071 17.9659 14.2477 17.8992C14.2491 17.9326 14.2499 17.9662 14.2499 18C14.2499 19.2426 13.2425 20.25 11.9999 20.25C10.7572 20.25 9.74989 19.2426 9.74989 18Z" fill="#0F172A"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.8569 17.0817C16.7515 16.857 18.5784 16.4116 20.3112 15.7719C18.8744 14.177 17.9999 12.0656 17.9999 9.75V9.04919C18 9.03281 18.0001 9.01641 18.0001 9C18.0001 5.68629 15.3138 3 12.0001 3C8.68637 3 6.00007 5.68629 6.00007 9L5.99988 9.75C5.99988 12.0656 5.12535 14.177 3.68855 15.7719C5.42148 16.4116 7.24851 16.857 9.14321 17.0818M14.8569 17.0817C13.9201 17.1928 12.9666 17.25 11.9999 17.25C11.0332 17.25 10.08 17.1929 9.14321 17.0818M14.8569 17.0817C14.9499 17.3711 15.0001 17.6797 15.0001 18C15.0001 19.6569 13.6569 21 12.0001 21C10.3432 21 9.00007 19.6569 9.00007 18C9.00007 17.6797 9.05026 17.3712 9.14321 17.0818M3.12451 7.5C3.41179 5.78764 4.18261 4.23924 5.29175 3M18.7084 3C19.8175 4.23924 20.5884 5.78764 20.8756 7.5" stroke="#0F172A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.21444 3.22682C4.47824 2.90747 4.43321 2.43474 4.11386 2.17094C3.79452 1.90714 3.32178 1.95217 3.05798 2.27151C2.1587 3.36014 1.50992 4.66493 1.20153 6.09703C1.11433 6.50196 1.37191 6.90091 1.77684 6.98811C2.18177 7.07531 2.58072 6.81774 2.66792 6.41281C2.92443 5.22161 3.46427 4.13494 4.21444 3.22682Z" fill="#0F172A"/>
<path d="M16.9417 2.27151C16.6779 1.95217 16.2051 1.90714 15.8858 2.17094C15.5664 2.43474 15.5214 2.90747 15.7852 3.22682C16.5354 4.13494 17.0752 5.22161 17.3317 6.41281C17.4189 6.81774 17.8179 7.07531 18.2228 6.98811C18.6277 6.90091 18.8853 6.50196 18.7981 6.09703C18.4897 4.66493 17.8409 3.36014 16.9417 2.27151Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M9.99997 2C6.68626 2 3.99997 4.68629 3.99997 8C3.99997 9.88663 3.54624 11.6651 2.7426 13.2343C2.63591 13.4426 2.6326 13.6888 2.73365 13.9C2.83469 14.1111 3.02851 14.2629 3.25769 14.3105C4.32537 14.5322 5.41181 14.7023 6.51426 14.818C6.67494 16.602 8.17421 18 10 18C11.8258 18 13.3251 16.602 13.4857 14.818C14.5882 14.7023 15.6746 14.5322 16.7422 14.3105C16.9714 14.2629 17.1652 14.1111 17.2663 13.9C17.3673 13.6888 17.364 13.4426 17.2573 13.2343C16.4537 11.6651 16 9.88663 16 8C16 4.68629 13.3137 2 9.99997 2ZM10 16.5C9.04777 16.5 8.25097 15.8345 8.0493 14.9433C8.69477 14.9809 9.34517 15 9.99997 15C10.6548 15 11.3052 14.9809 11.9507 14.9433C11.749 15.8345 10.9522 16.5 10 16.5Z" fill="#0F172A"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.59948 1.69988C3.84828 1.36872 3.78152 0.89856 3.45036 0.649752C3.1192 0.400945 2.64904 0.467705 2.40024 0.798866C1.89976 1.465 1.51499 2.22396 1.2765 3.04572C1.16105 3.44352 1.38994 3.85959 1.78774 3.97504C2.18554 4.09048 2.60161 3.8616 2.71706 3.4638C2.904 2.81965 3.20585 2.22379 3.59948 1.69988Z" fill="#0F172A"/>
<path d="M13.5995 0.798866C13.3507 0.467705 12.8805 0.400945 12.5494 0.649752C12.2182 0.89856 12.1514 1.36872 12.4002 1.69988C12.7939 2.22379 13.0957 2.81965 13.2827 3.4638C13.3981 3.8616 13.8142 4.09048 14.212 3.97504C14.6098 3.85959 14.8387 3.44352 14.7232 3.04572C14.4847 2.22396 14.1 1.465 13.5995 0.798866Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M7.99988 1C10.209 1 11.9999 2.79086 11.9999 5V7.37868C11.9999 7.7765 12.1579 8.15804 12.4392 8.43934L13.707 9.70711C13.8945 9.89464 13.9999 10.149 13.9999 10.4142V11C13.9999 11.5523 13.5522 12 12.9999 12H10.9999C10.9999 13.6569 9.65673 15 7.99988 15C6.34302 15 4.99988 13.6569 4.99988 12H2.99988C2.44759 12 1.99988 11.5523 1.99988 11V10.4142C1.99988 10.149 2.10523 9.89464 2.29277 9.70711L3.56054 8.43934C3.84184 8.15804 3.99988 7.7765 3.99988 7.37868V5C3.99988 2.79086 5.79074 1 7.99988 1ZM7.99988 13.5C7.17145 13.5 6.49988 12.8284 6.49988 12H9.49988C9.49988 12.8284 8.82831 13.5 7.99988 13.5Z" fill="#0F172A"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
