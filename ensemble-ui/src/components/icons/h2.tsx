import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-h2',
  shadow: false,
})
export class EUIIconH2 {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M2.24585 3.74347C2.66006 3.74347 2.99585 4.07926 2.99585 4.49348V11.2442H11.9961V4.49348C11.9961 4.07926 12.3319 3.74347 12.7461 3.74347C13.1603 3.74347 13.4961 4.07926 13.4961 4.49348V19.4949C13.4961 19.9092 13.1603 20.2449 12.7461 20.2449C12.3319 20.2449 11.9961 19.9092 11.9961 19.4949V12.7442H2.99585V19.4949C2.99585 19.9092 2.66006 20.2449 2.24585 20.2449C1.83164 20.2449 1.49585 19.9092 1.49585 19.4949V4.49348C1.49585 4.07926 1.83164 3.74347 2.24585 3.74347ZM18.75 10.5003C18.0227 10.5003 17.3087 10.5547 16.6115 10.6595C16.2019 10.7212 15.8199 10.439 15.7583 10.0294C15.6967 9.61982 15.9788 9.23781 16.3884 9.17619C17.1592 9.06025 17.9478 9.00022 18.75 9.00022C19.1788 9.00022 19.6037 9.01737 20.0242 9.05105C21.1725 9.14305 22.1769 9.97383 22.3718 11.1661C22.4562 11.6822 22.5 12.2114 22.5 12.7503C22.5 13.8153 21.8238 14.677 20.9687 15.1045L18.0792 16.5493C17.571 16.8034 17.25 17.3228 17.25 17.891V18.7505H21.75C22.1642 18.7505 22.5 19.0862 22.5 19.5005C22.5 19.9147 22.1642 20.2505 21.75 20.2505H16.5C16.0858 20.2505 15.75 19.9147 15.75 19.5005V17.891C15.75 16.7547 16.392 15.7159 17.4083 15.2077L20.2979 13.7628C20.7459 13.5388 21 13.1423 21 12.7503C21 12.2928 20.9628 11.8445 20.8915 11.4081C20.8168 10.9514 20.4216 10.5877 19.9044 10.5463C19.5237 10.5158 19.1388 10.5003 18.75 10.5003Z" fill="black"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M21.75 19.5005H16.5V17.891C16.5 17.0387 16.9815 16.2596 17.7438 15.8785L20.6333 14.4337C21.2849 14.1079 21.75 13.4788 21.75 12.7503C21.75 12.2521 21.7095 11.7633 21.6317 11.2871C21.4969 10.4626 20.7971 9.86539 19.9643 9.79867C19.5638 9.76659 19.1588 9.75023 18.75 9.75023C17.9853 9.75023 17.2339 9.80746 16.5 9.91786M2.24304 4.49278V11.9935M2.24304 11.9935V19.4942M2.24304 11.9935L12.7433 11.9942M12.7433 4.49351V11.9942M12.7433 11.9942V19.495" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M2.75 4C3.16421 4 3.5 4.33579 3.5 4.75V9.25H8.5V4.75C8.5 4.33579 8.83579 4 9.25 4C9.66421 4 10 4.33579 10 4.75V15.25C10 15.6642 9.66421 16 9.25 16C8.83579 16 8.5 15.6642 8.5 15.25V10.75H3.5V15.25C3.5 15.6642 3.16421 16 2.75 16C2.33579 16 2 15.6642 2 15.25V4.75C2 4.33579 2.33579 4 2.75 4ZM15 9.5C14.2714 9.5 13.5551 9.55104 12.8545 9.64965C12.4444 9.70737 12.065 9.42166 12.0073 9.01149C11.9496 8.60132 12.2353 8.22201 12.6455 8.16428C13.4151 8.05596 14.2012 8 15 8C15.4951 8 15.9853 8.0215 16.4698 8.06364C17.3246 8.13799 17.9824 8.84381 17.9974 9.70117C17.9991 9.80058 18 9.90019 18 10C18 10.2117 17.9961 10.4226 17.9883 10.6325C17.9611 11.3641 17.4695 11.9674 16.8088 12.1876L14.3547 13.0057C13.8443 13.1758 13.5 13.6535 13.5 14.1915V14.5H17.25C17.6642 14.5 18 14.8358 18 15.25C18 15.6642 17.6642 16 17.25 16H12.75C12.3358 16 12 15.6642 12 15.25V14.1915C12 13.0078 12.7574 11.957 13.8804 11.5826L16.3345 10.7646C16.4363 10.7307 16.4866 10.6483 16.4893 10.5768C16.4964 10.3854 16.5 10.1932 16.5 10C16.5 9.90895 16.4992 9.81809 16.4976 9.72743C16.496 9.6374 16.4289 9.56575 16.3398 9.558C15.8985 9.51961 15.4516 9.5 15 9.5Z" fill="black"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M1.75 3C2.16421 3 2.5 3.33579 2.5 3.75V7.25H6.5V3.75C6.5 3.33579 6.83579 3 7.25 3C7.66421 3 8 3.33579 8 3.75V12.25C8 12.6642 7.66421 13 7.25 13C6.83579 13 6.5 12.6642 6.5 12.25V8.75H2.5V12.25C2.5 12.6642 2.16421 13 1.75 13C1.33579 13 1 12.6642 1 12.25V3.75C1 3.33579 1.33579 3 1.75 3ZM12.5 7.5C11.942 7.5 11.3939 7.54057 10.8584 7.61881C10.4486 7.67869 10.0678 7.39498 10.0079 6.98512C9.94799 6.57526 10.2317 6.19445 10.6416 6.13457C11.2486 6.04587 11.8692 6 12.5 6C12.8289 6 13.155 6.01247 13.4779 6.03698C14.2855 6.09829 14.9504 6.74134 14.9901 7.57964C14.9967 7.71898 15 7.85913 15 8C15 8.25126 14.9894 8.50022 14.9686 8.74642C14.9092 9.44778 14.416 9.98522 13.8101 10.1872L11.6709 10.9003C11.5689 10.9343 11.5 11.0298 11.5 11.1374V11.5H14.25C14.6642 11.5 15 11.8358 15 12.25C15 12.6642 14.6642 13 14.25 13H10.75C10.3358 13 10 12.6642 10 12.25V11.1374C10 10.3842 10.482 9.71543 11.1966 9.47723L13.3358 8.76417C13.4362 8.7307 13.4705 8.66054 13.4739 8.62001C13.4912 8.4158 13.5 8.20902 13.5 8C13.5 7.88281 13.4972 7.76633 13.4917 7.65061C13.4892 7.59775 13.4464 7.5389 13.3644 7.53268C13.0792 7.51103 12.791 7.5 12.5 7.5Z" fill="black"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
