import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-beaker',
  shadow: false,
})
export class EUIIconBeaker {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.5 3.79758V8.81802C10.5 9.61367 10.1839 10.3767 9.62134 10.9393L7.2443 13.3164C8.99164 13.192 10.7578 13.5404 12.3354 14.3292C14.0988 15.2109 16.1395 15.442 18.048 14.9649L18.333 14.8937L14.3787 10.9393C13.8161 10.3767 13.5 9.61367 13.5 8.81802V3.79758C13.0042 3.76602 12.504 3.75 12 3.75C11.496 3.75 10.9959 3.76602 10.5 3.79758ZM15 3.93576C15.3732 3.93623 15.6969 3.65833 15.7443 3.27849C15.7955 2.86746 15.5039 2.4927 15.0928 2.44144C14.8362 2.40945 14.5784 2.38138 14.3195 2.3573C13.5557 2.28628 12.782 2.25 12 2.25C11.2181 2.25 10.4444 2.28628 9.68058 2.3573C9.42163 2.38138 9.16382 2.40945 8.90721 2.44144C8.49618 2.4927 8.20453 2.86746 8.25578 3.27849C8.30315 3.65833 8.62679 3.93623 9.00002 3.93576V8.81802C9.00002 9.21584 8.84198 9.59737 8.56068 9.87868L2.26748 16.1719C0.646344 17.793 1.36449 20.6474 3.73839 21.0527C6.42422 21.5112 9.18453 21.75 12 21.75C14.8155 21.75 17.5758 21.5112 20.2616 21.0527C22.6356 20.6474 23.3537 17.793 21.7326 16.1719L15.4394 9.87868C15.1581 9.59737 15 9.21584 15 8.81802V3.93576Z" fill="#0F172A"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.74997 3.10408V8.81802C9.74997 9.41476 9.51292 9.98705 9.09097 10.409L4.99998 14.5M9.74997 3.10408C9.49883 3.12743 9.24881 3.15465 8.99997 3.18568M9.74997 3.10408C10.4907 3.03521 11.2412 3 12 3C12.7587 3 13.5092 3.03521 14.25 3.10408M14.25 3.10408V8.81802C14.25 9.41476 14.487 9.98705 14.909 10.409L19.8 15.3M14.25 3.10408C14.5011 3.12743 14.7511 3.15465 15 3.18568M19.8 15.3L18.2299 15.6925C16.1456 16.2136 13.9216 15.9608 12 15C10.0784 14.0392 7.85432 13.7864 5.77007 14.3075L4.99998 14.5M19.8 15.3L21.2022 16.7022C22.4341 17.9341 21.8527 20.0202 20.1354 20.3134C17.4911 20.7649 14.773 21 12 21C9.22696 21 6.50888 20.7649 3.86456 20.3134C2.14725 20.0202 1.56588 17.9341 2.79777 16.7022L4.99998 14.5" stroke="#0F172A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M8.50008 3.52795V8.17157C8.50008 8.90092 8.21035 9.60039 7.69463 10.1161L6.47822 11.3325C7.68614 11.2911 8.89524 11.5003 10.0276 11.9532L10.5297 12.1541C11.8562 12.6847 13.3099 12.8115 14.7081 12.5187L12.3055 10.1161C11.7898 9.60039 11.5001 8.90092 11.5001 8.17157V3.52795C11.0024 3.50937 10.5024 3.5 10.0001 3.5C9.4978 3.5 8.99775 3.50937 8.50008 3.52795ZM13.0001 3.61218C13.0635 3.61695 13.127 3.62186 13.1903 3.62693C13.6032 3.65992 13.9647 3.35194 13.9977 2.93905C14.0307 2.52615 13.7227 2.16468 13.3098 2.13169C12.9715 2.10466 12.6319 2.08173 12.2913 2.06296C11.5328 2.02117 10.7689 2 10.0001 2C9.23128 2 8.46734 2.02117 7.70882 2.06296C7.36822 2.08173 7.02871 2.10466 6.69035 2.13169C6.27745 2.16468 5.96947 2.52615 6.00246 2.93905C6.03546 3.35194 6.39692 3.65992 6.80982 3.62693C6.8732 3.62186 6.93662 3.61695 7.00008 3.61218V8.17157C7.00008 8.50309 6.86839 8.82104 6.63397 9.05546L2.60043 13.089C1.10394 14.5855 1.78343 17.2391 4.00345 17.5645C5.96119 17.8515 7.96352 18 10.0001 18C12.0366 18 14.039 17.8515 15.9967 17.5645C18.2167 17.2391 18.8962 14.5855 17.3997 13.089L13.3662 9.05546C13.1318 8.82104 13.0001 8.50309 13.0001 8.17157V3.61218Z" fill="#0F172A"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M11 3.5V5.75736C11 6.3541 11.2371 6.92639 11.659 7.34835L14.3916 10.0809C14.7812 10.4705 15 10.9988 15 11.5498C15 12.5352 14.3015 13.4103 13.2976 13.5736C11.5728 13.8542 9.80313 14 8 14C6.19687 14 4.42725 13.8542 2.70242 13.5736C1.69854 13.4103 1 12.5352 1 11.5498C1 10.9988 1.21885 10.4705 1.6084 10.0809L4.34099 7.34835C4.76295 6.92639 5 6.3541 5 5.75736V3.5H4.75C4.33579 3.5 4 3.16421 4 2.75C4 2.33579 4.33579 2 4.75 2H11.25C11.6642 2 12 2.33579 12 2.75C12 3.16421 11.6642 3.5 11.25 3.5H11ZM6.5 5.75736V3.5H9.5V5.75736C9.5 6.75192 9.89509 7.70575 10.5983 8.40901L10.7562 8.56685C10.7312 8.57785 10.7062 8.58922 10.6812 8.60096C10.2573 8.80044 9.76537 8.79458 9.34634 8.58507L8.15576 7.98978C7.50358 7.66369 6.79678 7.49016 6.08618 7.4698C6.35566 6.94476 6.5 6.3585 6.5 5.75736Z" fill="#0F172A"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
