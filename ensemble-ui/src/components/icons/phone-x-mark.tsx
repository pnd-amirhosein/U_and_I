import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-phone-x-mark',
  shadow: false,
})
export class EUIIconPhoneXMark {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M15.2197 3.21967C15.5126 2.92678 15.9874 2.92678 16.2803 3.21967L18 4.93934L19.7197 3.21967C20.0126 2.92678 20.4874 2.92678 20.7803 3.21967C21.0732 3.51256 21.0732 3.98744 20.7803 4.28033L19.0607 6L20.7803 7.71967C21.0732 8.01256 21.0732 8.48744 20.7803 8.78033C20.4874 9.07322 20.0126 9.07322 19.7197 8.78033L18 7.06066L16.2803 8.78033C15.9874 9.07322 15.5126 9.07322 15.2197 8.78033C14.9268 8.48744 14.9268 8.01256 15.2197 7.71967L16.9393 6L15.2197 4.28033C14.9268 3.98744 14.9268 3.51256 15.2197 3.21967Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 4.5C1.5 2.84315 2.84315 1.5 4.5 1.5H5.87163C6.732 1.5 7.48197 2.08556 7.69064 2.92025L8.79644 7.34343C8.97941 8.0753 8.70594 8.84555 8.10242 9.29818L6.8088 10.2684C6.67447 10.3691 6.64527 10.5167 6.683 10.6197C7.81851 13.7195 10.2805 16.1815 13.3803 17.317C13.4833 17.3547 13.6309 17.3255 13.7316 17.1912L14.7018 15.8976C15.1545 15.2941 15.9247 15.0206 16.6566 15.2036L21.0798 16.3094C21.9144 16.518 22.5 17.268 22.5 18.1284V19.5C22.5 21.1569 21.1569 22.5 19.5 22.5H17.25C8.55151 22.5 1.5 15.4485 1.5 6.75V4.5Z" fill="#0F172A"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.75 3.75L18 6M18 6L20.25 8.25M18 6L20.25 3.75M18 6L15.75 8.25M17.25 21.75C8.96573 21.75 2.25 15.0343 2.25 6.75V4.5C2.25 3.25736 3.25736 2.25 4.5 2.25H5.87163C6.38785 2.25 6.83783 2.60133 6.96304 3.10215L8.06883 7.52533C8.17861 7.96445 8.01453 8.4266 7.65242 8.69818L6.3588 9.6684C5.98336 9.94998 5.81734 10.437 5.97876 10.8777C7.19015 14.1846 9.81539 16.8098 13.1223 18.0212C13.563 18.1827 14.05 18.0166 14.3316 17.6412L15.3018 16.3476C15.5734 15.9855 16.0355 15.8214 16.4747 15.9312L20.8979 17.037C21.3987 17.1622 21.75 17.6121 21.75 18.1284V19.5C21.75 20.7426 20.7426 21.75 19.5 21.75H17.25Z" stroke="#0F172A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M4.64844 2C5.35146 2.00003 5.9598 2.48852 6.1123 3.1748L6.8291 6.39746C7.00128 7.17227 6.53954 7.94699 5.77637 8.16504L4.84375 8.43164C4.43303 8.54904 4.20138 8.98692 4.36426 9.38184C5.5303 12.2087 7.79126 14.4697 10.6182 15.6357C11.0131 15.7986 11.451 15.567 11.5684 15.1562L11.835 14.2236C12.053 13.4605 12.8277 12.9987 13.6025 13.1709L16.8252 13.8877C17.5115 14.0402 18 14.6485 18 15.3516V16.5C18 17.3284 17.3284 18 16.5 18H15C13.8514 18 12.7362 17.8507 11.6738 17.5703C7.16658 16.3807 3.61935 12.8334 2.42969 8.32617C2.14933 7.26382 2 6.14856 2 5V3.5C2 2.67157 2.67157 2 3.5 2H4.64844ZM16.7197 2.21973C17.0126 1.92683 17.4874 1.92683 17.7803 2.21973C18.0732 2.51262 18.0732 2.98738 17.7803 3.28027L16.0605 5L17.7803 6.71973C18.0732 7.01262 18.0732 7.48738 17.7803 7.78027C17.4874 8.07317 17.0126 8.07317 16.7197 7.78027L15 6.06055L13.2803 7.78027C12.9874 8.07317 12.5126 8.07317 12.2197 7.78027C11.9268 7.48738 11.9268 7.01262 12.2197 6.71973L13.9395 5L12.2197 3.28027C11.9268 2.98738 11.9268 2.51262 12.2197 2.21973C12.5126 1.92683 12.9874 1.92683 13.2803 2.21973L15 3.93945L16.7197 2.21973Z" fill="#0F172A"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M3.85462 7.28621L4.92241 6.75232C5.31094 6.55806 5.52962 6.13518 5.46357 5.70584L5.02389 2.84794C4.94884 2.36011 4.52909 2 4.03552 2H3C2.44772 2 2 2.44772 2 3V5C2 5.70879 2.08208 6.39936 2.23758 7.06237C3.01505 10.3773 5.62265 12.985 8.93763 13.7624C9.60064 13.9179 10.2912 14 11 14H13C13.5523 14 14 13.5523 14 13V11.9645C14 11.4709 13.6399 11.0512 13.1521 10.9761L10.2942 10.5364C9.86482 10.4704 9.44195 10.6891 9.24768 11.0776L8.71379 12.1454C6.4109 11.4092 4.59083 9.58911 3.85462 7.28621Z" fill="#0F172A"/>
<path d="M13.7803 2.21967C14.0732 2.51256 14.0732 2.98744 13.7803 3.28033L12.5607 4.5L13.7803 5.71967C14.0732 6.01256 14.0732 6.48744 13.7803 6.78033C13.4874 7.07322 13.0126 7.07322 12.7197 6.78033L11.5 5.56066L10.2803 6.78033C9.98744 7.07322 9.51256 7.07322 9.21967 6.78033C8.92678 6.48744 8.92678 6.01256 9.21967 5.71967L10.4393 4.5L9.21967 3.28033C8.92678 2.98744 8.92678 2.51256 9.21967 2.21967C9.51256 1.92678 9.98744 1.92678 10.2803 2.21967L11.5 3.43934L12.7197 2.21967C13.0126 1.92678 13.4874 1.92678 13.7803 2.21967Z" fill="#0F172A"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
