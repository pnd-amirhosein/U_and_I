import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-shield-exclamation',
  shadow: false,
})
export class EUIIconShieldExclamation {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M11.4843 2.16968C11.7735 1.89575 12.2265 1.89575 12.5157 2.16968C14.5325 4.07965 17.2538 5.24998 20.25 5.24998C20.2977 5.24998 20.3453 5.24969 20.3928 5.2491C20.7202 5.24503 21.0123 5.45378 21.1146 5.76479C21.5271 7.01955 21.75 8.35951 21.75 9.75003C21.75 15.692 17.6859 20.683 12.1869 22.0983C12.0643 22.1299 11.9357 22.1299 11.8131 22.0983C6.31406 20.683 2.25 15.692 2.25 9.75003C2.25 8.35951 2.47287 7.01955 2.88541 5.76479C2.98767 5.45378 3.27984 5.24503 3.60721 5.2491C3.65473 5.24969 3.70233 5.24998 3.75 5.24998C6.74624 5.24998 9.46752 4.07965 11.4843 2.16968ZM12 8.24997C12.4142 8.24997 12.75 8.58576 12.75 8.99997V12.75C12.75 13.1642 12.4142 13.5 12 13.5C11.5858 13.5 11.25 13.1642 11.25 12.75V8.99997C11.25 8.58576 11.5858 8.24997 12 8.24997ZM12 15C11.5858 15 11.25 15.3358 11.25 15.75V15.7575C11.25 16.1717 11.5858 16.5075 12 16.5075H12.0075C12.4217 16.5075 12.7575 16.1717 12.7575 15.7575V15.75C12.7575 15.3358 12.4217 15 12.0075 15H12Z" fill="#0F172A"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 8.99997V12.75M12 2.71423C9.8495 4.75086 6.94563 5.99998 3.75 5.99998C3.69922 5.99998 3.64852 5.99967 3.59789 5.99904C3.2099 7.17915 3 8.44008 3 9.75003C3 15.3415 6.82432 20.0398 12 21.372C17.1757 20.0398 21 15.3415 21 9.75003C21 8.44008 20.7901 7.17915 20.4021 5.99904C20.3515 5.99967 20.3008 5.99998 20.25 5.99998C17.0544 5.99998 14.1505 4.75086 12 2.71423ZM12 15.75H12.0075V15.7575H12V15.75Z" stroke="#0F172A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M10.3389 2.23669C10.1429 2.07394 9.85709 2.07394 9.66109 2.23669C7.72231 3.84655 5.2685 4.8576 2.58337 4.98613C2.34202 4.99768 2.13593 5.17201 2.10424 5.41156C2.03548 5.93137 2 6.46169 2 7.00029C2 12.1628 5.26004 16.564 9.83378 18.2573C9.94102 18.297 10.0593 18.297 10.1665 18.2573C14.7401 16.5639 18 12.1628 18 7.00041C18 6.46176 17.9645 5.93141 17.8957 5.41155C17.8641 5.17201 17.658 4.99768 17.4166 4.98613C14.7315 4.8576 12.2777 3.84655 10.3389 2.23669ZM10 6.00006C10.4142 6.00006 10.75 6.33585 10.75 6.75006V10.2501C10.75 10.6643 10.4142 11.0001 10 11.0001C9.58579 11.0001 9.25 10.6643 9.25 10.2501L9.25 6.75006C9.25 6.33585 9.58579 6.00006 10 6.00006ZM10 15.0001C10.5523 15.0001 11 14.5523 11 14.0001C11 13.4478 10.5523 13.0001 10 13.0001C9.44772 13.0001 9 13.4478 9 14.0001C9 14.5523 9.44772 15.0001 10 15.0001Z" fill="#0F172A"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M7.49981 1.70873C7.78457 1.45386 8.21543 1.45386 8.50019 1.70873C9.8219 2.89169 11.4937 3.6889 13.3401 3.92627C13.7049 3.97316 13.9819 4.27764 13.9941 4.64522C13.998 4.7631 14 4.88145 14 5.00023C14 9.05223 11.7046 12.5669 8.34664 14.317C8.12941 14.4302 7.87059 14.4302 7.65336 14.317C4.29542 12.5669 2 9.05223 2 5.00023C2 4.88145 2.00198 4.7631 2.0059 4.64521C2.01813 4.27764 2.29508 3.97316 2.65985 3.92627C4.50633 3.6889 6.1781 2.89169 7.49981 1.70873ZM8 5C8.41421 5 8.75 5.33579 8.75 5.75V7.75C8.75 8.16421 8.41421 8.5 8 8.5C7.58579 8.5 7.25 8.16421 7.25 7.75V5.75C7.25 5.33579 7.58579 5 8 5ZM8 12C8.55228 12 9 11.5523 9 11C9 10.4477 8.55228 10 8 10C7.44772 10 7 10.4477 7 11C7 11.5523 7.44772 12 8 12Z" fill="#0F172A"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
