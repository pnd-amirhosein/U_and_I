import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-code-bracket',
  shadow: false,
})
export class EUIIconCodeBracket {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M14.4473 3.02642C14.847 3.13541 15.0826 3.54772 14.9736 3.94734L10.4736 20.4473C10.3646 20.847 9.95228 21.0826 9.55266 20.9736C9.15304 20.8646 8.91744 20.4523 9.02643 20.0527L13.5264 3.55266C13.6354 3.15304 14.0477 2.91744 14.4473 3.02642ZM16.7197 6.21967C17.0126 5.92677 17.4874 5.92677 17.7803 6.21967L23.0303 11.4697C23.3232 11.7626 23.3232 12.2374 23.0303 12.5303L17.7803 17.7803C17.4874 18.0732 17.0126 18.0732 16.7197 17.7803C16.4268 17.4874 16.4268 17.0126 16.7197 16.7197L21.4393 12L16.7197 7.28033C16.4268 6.98743 16.4268 6.51256 16.7197 6.21967ZM7.28033 6.21967C7.57322 6.51256 7.57322 6.98743 7.28033 7.28033L2.56066 12L7.28033 16.7197C7.57322 17.0126 7.57322 17.4874 7.28033 17.7803C6.98744 18.0732 6.51256 18.0732 6.21967 17.7803L0.96967 12.5303C0.676777 12.2374 0.676777 11.7626 0.96967 11.4697L6.21967 6.21967C6.51256 5.92677 6.98744 5.92677 7.28033 6.21967Z" fill="#0F172A"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.25 6.75L22.5 12L17.25 17.25M6.75 17.25L1.5 12L6.75 6.75M14.25 3.75L9.75 20.25" stroke="#0F172A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M6.28033 5.21967C6.57322 5.51256 6.57322 5.98744 6.28033 6.28033L2.56066 10L6.28033 13.7197C6.57322 14.0126 6.57322 14.4874 6.28033 14.7803C5.98744 15.0732 5.51256 15.0732 5.21967 14.7803L0.96967 10.5303C0.676777 10.2374 0.676777 9.76256 0.96967 9.46967L5.21967 5.21967C5.51256 4.92678 5.98744 4.92678 6.28033 5.21967ZM13.7197 5.21967C14.0126 4.92678 14.4874 4.92678 14.7803 5.21967L19.0303 9.46967C19.3232 9.76256 19.3232 10.2374 19.0303 10.5303L14.7803 14.7803C14.4874 15.0732 14.0126 15.0732 13.7197 14.7803C13.4268 14.4874 13.4268 14.0126 13.7197 13.7197L17.4393 10L13.7197 6.28033C13.4268 5.98744 13.4268 5.51256 13.7197 5.21967Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M11.3774 2.0109C11.7856 2.08128 12.0595 2.46924 11.9891 2.87743L9.48909 17.3774C9.41872 17.7856 9.03076 18.0595 8.62257 17.9891C8.21438 17.9187 7.94053 17.5308 8.0109 17.1226L10.5109 2.62257C10.5813 2.21438 10.9692 1.94053 11.3774 2.0109Z" fill="#0F172A"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M4.78033 4.96967C5.07322 5.26256 5.07322 5.73743 4.78033 6.03033L2.81066 8L4.78033 9.96967C5.07322 10.2626 5.07322 10.7374 4.78033 11.0303C4.48744 11.3232 4.01256 11.3232 3.71967 11.0303L1.21967 8.53033C0.926777 8.23743 0.926777 7.76256 1.21967 7.46967L3.71967 4.96967C4.01256 4.67677 4.48744 4.67677 4.78033 4.96967Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M11.2197 4.96967C10.9268 5.26256 10.9268 5.73743 11.2197 6.03033L13.1893 8L11.2197 9.96967C10.9268 10.2626 10.9268 10.7374 11.2197 11.0303C11.5126 11.3232 11.9874 11.3232 12.2803 11.0303L14.7803 8.53033C15.0732 8.23743 15.0732 7.76256 14.7803 7.46967L12.2803 4.96967C11.9874 4.67677 11.5126 4.67677 11.2197 4.96967Z" fill="#0F172A"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M8.85607 2.00753C9.26612 2.06611 9.55104 2.44601 9.49246 2.85606L7.99246 13.3561C7.93388 13.7661 7.55398 14.051 7.14393 13.9925C6.73388 13.9339 6.44896 13.554 6.50754 13.1439L8.00754 2.64393C8.06612 2.23388 8.44602 1.94896 8.85607 2.00753Z" fill="#0F172A"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
