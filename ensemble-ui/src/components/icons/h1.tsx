import { Component, Prop, h, Host, Element } from '@stencil/core';

@Component({
  tag: 'eui-icon-h1',
  shadow: false,
})
export class EUIIconH1 {
  @Element() hostEl!: HTMLElement;
  @Prop() type : "solid" | "outline" | "mini" | "micro" = "solid";

  getSvg() {
    switch (this.type) {
      case 'solid': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M2.24306 3.74272C2.65729 3.74272 2.99309 4.07852 2.99309 4.49276V11.2434H11.9933V4.49348C11.9933 4.07925 12.3291 3.74344 12.7433 3.74344C13.1575 3.74344 13.4933 4.07925 13.4933 4.49348V19.4949C13.4933 19.9092 13.1575 20.245 12.7433 20.245C12.3291 20.245 11.9933 19.9092 11.9933 19.4949V12.7435H2.99309V19.4942C2.99309 19.9084 2.65729 20.2442 2.24306 20.2442C1.82884 20.2442 1.49304 19.9084 1.49304 19.4942V4.49276C1.49304 4.07852 1.82884 3.74272 2.24306 3.74272ZM19.8478 8.7064C20.0917 8.83692 20.2439 9.09108 20.2439 9.3677V18.7436H21.7439C22.1581 18.7436 22.4939 19.0794 22.4939 19.4937C22.4939 19.9079 22.1581 20.2437 21.7439 20.2437H17.2439C16.8297 20.2437 16.4939 19.9079 16.4939 19.4937C16.4939 19.0794 16.8297 18.7436 17.2439 18.7436H18.7439V10.7692L17.66 11.4919C17.3153 11.7217 16.8497 11.6286 16.6199 11.2839C16.3901 10.9393 16.4832 10.4736 16.8279 10.2438L19.0778 8.74365C19.308 8.5902 19.6039 8.57588 19.8478 8.7064Z" fill="black"/>
</svg>
`;
      case 'outline': return `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.24304 4.49276V11.9935M2.24304 11.9935V19.4942M2.24304 11.9935L12.7433 11.9942M12.7433 4.49348V11.9942M12.7433 11.9942V19.4949M17.2439 10.8678L19.4939 9.3677V19.4937M19.4939 19.4937H17.2439M19.4939 19.4937H21.7438" stroke="black" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
`;
      case 'mini': return `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M2.75 4C3.16421 4 3.5 4.33579 3.5 4.75V9.25H8.5V4.75C8.5 4.33579 8.83579 4 9.25 4C9.66421 4 10 4.33579 10 4.75V15.25C10 15.6642 9.66421 16 9.25 16C8.83579 16 8.5 15.6642 8.5 15.25V10.75H3.5V15.25C3.5 15.6642 3.16421 16 2.75 16C2.33579 16 2 15.6642 2 15.25V4.75C2 4.33579 2.33579 4 2.75 4ZM13 8.75C13 8.33579 13.3358 8 13.75 8H15.5C15.9142 8 16.25 8.33579 16.25 8.75V14.5H17.25C17.6642 14.5 18 14.8358 18 15.25C18 15.6642 17.6642 16 17.25 16H13.75C13.3358 16 13 15.6642 13 15.25C13 14.8358 13.3358 14.5 13.75 14.5H14.75V9.5H13.75C13.3358 9.5 13 9.16421 13 8.75Z" fill="black"/>
</svg>
`;
      case 'micro': return `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M1.75 3C2.16421 3 2.5 3.33579 2.5 3.75V7.25H6.5V3.75C6.5 3.33579 6.83579 3 7.25 3C7.66421 3 8 3.33579 8 3.75V12.25C8 12.6642 7.66421 13 7.25 13C6.83579 13 6.5 12.6642 6.5 12.25V8.75H2.5V12.25C2.5 12.6642 2.16421 13 1.75 13C1.33579 13 1 12.6642 1 12.25V3.75C1 3.33579 1.33579 3 1.75 3ZM10 6.75C10 6.33579 10.3358 6 10.75 6H12.5C12.9142 6 13.25 6.33579 13.25 6.75V11.5H14.25C14.6642 11.5 15 11.8358 15 12.25C15 12.6642 14.6642 13 14.25 13H10.75C10.3358 13 10 12.6642 10 12.25C10 11.8358 10.3358 11.5 10.75 11.5H11.75V7.5H10.75C10.3358 7.5 10 7.16421 10 6.75Z" fill="black"/>
</svg>
`;
      default:
        return '';
    }
  }

  render() {
    const svg = this.getSvg();
    const attrs = Array.from(this.hostEl.attributes)
      .filter(attr => !['type', 'class'].includes(attr.name))
      .reduce((acc:any, attr) => {
        acc[attr.name] = attr.value;
        return acc;
      }, {});
      
    return (
      <Host>
        <div {...attrs} innerHTML={svg}></div>
      </Host>
    );
  }
}
