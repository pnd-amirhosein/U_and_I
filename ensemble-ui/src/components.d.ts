/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Alert, Validation } from "../packages/core/utils/helpers/types";
export { Alert, Validation } from "../packages/core/utils/helpers/types";
export namespace Components {
    interface EuiButton {
        /**
          * Style mode of the button
          * @default "normal"
         */
        "mode": "normal" | "outline" | "text-button";
        /**
          * Button size
          * @default "md"
         */
        "size": "sm" | "md" | "lg";
        /**
          * Button variant
          * @default 'primary'
         */
        "variant": 'primary' | 'danger' | 'success' | 'warning';
    }
    interface EuiIcon {
        /**
          * @default ''
         */
        "name": string;
        /**
          * @default 'micro'
         */
        "type": 'solid' | 'outline' | 'mini' | 'micro';
    }
    interface EuiInput {
        /**
          * @default { message: "There's an error!", type: "danger" }
         */
        "alert": Alert;
        /**
          * @default 'normal'
         */
        "mode": 'normal' | 'outline' | 'text-input';
        "style"?: string;
        /**
          * @default 'text'
         */
        "type": HTMLInputElement['type'];
        "validation"?: Validation;
    }
}
declare global {
    interface HTMLEuiButtonElement extends Components.EuiButton, HTMLStencilElement {
    }
    var HTMLEuiButtonElement: {
        prototype: HTMLEuiButtonElement;
        new (): HTMLEuiButtonElement;
    };
    interface HTMLEuiIconElement extends Components.EuiIcon, HTMLStencilElement {
    }
    var HTMLEuiIconElement: {
        prototype: HTMLEuiIconElement;
        new (): HTMLEuiIconElement;
    };
    interface HTMLEuiInputElement extends Components.EuiInput, HTMLStencilElement {
    }
    var HTMLEuiInputElement: {
        prototype: HTMLEuiInputElement;
        new (): HTMLEuiInputElement;
    };
    interface HTMLElementTagNameMap {
        "eui-button": HTMLEuiButtonElement;
        "eui-icon": HTMLEuiIconElement;
        "eui-input": HTMLEuiInputElement;
    }
}
declare namespace LocalJSX {
    interface EuiButton {
        /**
          * Style mode of the button
          * @default "normal"
         */
        "mode"?: "normal" | "outline" | "text-button";
        /**
          * Button size
          * @default "md"
         */
        "size"?: "sm" | "md" | "lg";
        /**
          * Button variant
          * @default 'primary'
         */
        "variant"?: 'primary' | 'danger' | 'success' | 'warning';
    }
    interface EuiIcon {
        /**
          * @default ''
         */
        "name"?: string;
        /**
          * @default 'micro'
         */
        "type"?: 'solid' | 'outline' | 'mini' | 'micro';
    }
    interface EuiInput {
        /**
          * @default { message: "There's an error!", type: "danger" }
         */
        "alert"?: Alert;
        /**
          * @default 'normal'
         */
        "mode"?: 'normal' | 'outline' | 'text-input';
        "style"?: string;
        /**
          * @default 'text'
         */
        "type"?: HTMLInputElement['type'];
        "validation"?: Validation;
    }
    interface IntrinsicElements {
        "eui-button": EuiButton;
        "eui-icon": EuiIcon;
        "eui-input": EuiInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "eui-button": LocalJSX.EuiButton & JSXBase.HTMLAttributes<HTMLEuiButtonElement>;
            "eui-icon": LocalJSX.EuiIcon & JSXBase.HTMLAttributes<HTMLEuiIconElement>;
            "eui-input": LocalJSX.EuiInput & JSXBase.HTMLAttributes<HTMLEuiInputElement>;
        }
    }
}
